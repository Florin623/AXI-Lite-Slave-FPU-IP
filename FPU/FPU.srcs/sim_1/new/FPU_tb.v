`timescale 1ns / 1ps


module FPU_tb();


reg         clk;
reg         rst;
reg         start;
reg  [31:0] A;
reg  [31:0] B;
reg  [1:0]  opcode;
wire [31:0] O;


initial begin
    clk = 0;
    forever #41.667 clk = ~clk;
end


initial begin
    rst = 1;
    start = 1;
    A = 32'b0_10000010_01000110011001100110011;  // 10.20
    B = 32'b0_10000000_00000101000111101011100;  // 2.04
    opcode = 2'b00;
    repeat (4) @(posedge clk);


    A = 32'b0_10000001_11100010111100011010101;  // 7.546
    B = 32'b1_10000001_10001111010111000010100;  // -6.24
    opcode = 2'b01;
    repeat (4) @(posedge clk);


    A = 32'b1_10000000_10010010000111001010110;  // -3.1415
    B = 32'b0_10000101_10001111111100101011000;  // 99.987
    opcode = 2'b10;
    repeat (4) @(posedge clk);


    A = 32'b0_10000101_11111100001000000000000;  // 127.03125
    B = 32'b0_10000011_00001111000000000000000;  // 16.9375
    opcode = 2'b11;
    repeat (4) @(posedge clk);


    A = 32'b0_11111111_00000000000000000001111;  // NaN
    B = 32'b0_11111111_00000000000000000000000;  // inf
    repeat (4) @(posedge clk);


    A = 32'b0_11111111_00000000000000000000000;  // inf
    B = 32'b0_01111110_11110000001000001100010;  // 0.969
    opcode = 2'b10;
    repeat (4) @(posedge clk);


    A = 32'b1_11111111_00000000000000000000000;  // -inf
    B = 32'b0_11111111_00000000000000000000000;  // +inf
    opcode = 2'b01;
    repeat (4) @(posedge clk);


    start = 0;
    A = 32'b1_10000011_00011101101101100100011;  // -17.857
    B = 32'b1_10000110_10001110111011110001101;  // -199.467
    opcode = 2'b00;
    repeat (4) @(posedge clk);


    rst = 0;
    A = 32'b0_10000101_00010110110000101001000;  // 69.69
    B = 32'b1_10001000_10000100111000110111010;  // -777.777
    opcode = 2'b01;
    repeat (4) @(posedge clk);

    $stop();
end


FPU DUT(
    .clk(clk),
    .rst(rst),
    .start(start),
    .A(A),
    .B(B),
    .opcode(opcode),
    .O(O)
);


endmodule